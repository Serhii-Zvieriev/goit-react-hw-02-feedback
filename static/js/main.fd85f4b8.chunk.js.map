{"version":3,"sources":["components/Statistics/Statistics.jsx","components/FeedbackOptions/FeedbackOptions.jsx","components/Section/Section.jsx","components/Notification/Notification.jsx","App.js","index.js","components/FeedbackOptions/FeedbackOptions.module.scss"],"names":["Statistics","good","neutral","bad","total","positivePercentage","isNaN","FeedbackOptions","options","onLeaveFeedback","btnNamesArr","Object","keys","className","style","list__button","map","btmName","id","onClick","btn","charAt","toUpperCase","slice","Section","title","children","Notification","message","App","state","handleClick","event","setState","prevState","target","countTotalFeedback","countPositiveFeedbackPercentage","Math","round","this","Component","ReactDOM","render","StrictMode","document","getElementById","module","exports"],"mappings":"sPAqCeA,MAnCf,YAAwE,IAAlDC,EAAiD,EAAjDA,KAAMC,EAA2C,EAA3CA,QAASC,EAAkC,EAAlCA,IAAKC,EAA6B,EAA7BA,MAAOC,EAAsB,EAAtBA,mBAC/C,OACE,mCACE,+BACE,6BACE,uCAAUJ,OAEZ,6BACE,0CAAaC,OAEf,6BACE,sCAASC,OAEX,6BACE,wCAAWC,OAEb,6BACE,mDACqB,IAClBE,MAAMD,GAAsB,EAAIA,EAFnC,e,gBCWKE,MA1Bf,YAAwD,IAA7BC,EAA4B,EAA5BA,QAASC,EAAmB,EAAnBA,gBAC5BC,EAAcC,OAAOC,KAAKJ,GAChC,OACE,mCACE,oBAAIK,UAAWC,IAAMC,aAArB,SACGL,EAAYM,KAAI,SAAAC,GAAO,OACtB,6BACE,wBACEC,GAAID,EACJE,QAASV,EACTI,UAAWC,IAAMM,IAHnB,SAKGH,EAAQI,OAAO,GAAGC,cAAgBL,EAAQM,MAAM,MAN5CN,WCKJO,MAbf,YAAuC,IAApBC,EAAmB,EAAnBA,MAAOC,EAAY,EAAZA,SACxB,OACE,oCACE,6BAAKD,IACJC,MCIQC,MARf,YAAoC,IAAZC,EAAW,EAAXA,QACtB,OAAO,4BAAIA,KCMPC,G,kNACJC,MAAQ,CACN7B,KAAM,EACNC,QAAS,EACTC,IAAK,G,EAGP4B,YAAc,SAAAC,GACZ,EAAKC,UAAS,SAAAC,GACZ,OAAO,2BACFA,GADL,kBAEGF,EAAMG,OAAOjB,GAAKgB,EAAUF,EAAMG,OAAOjB,IAAM,Q,EAKtDkB,mBAAqB,WACnB,OAAO,EAAKN,MAAM7B,KAAO,EAAK6B,MAAM5B,QAAU,EAAK4B,MAAM3B,K,EAG3DkC,gCAAkC,WAChC,OAAOC,KAAKC,MAAO,EAAKT,MAAM7B,KAAO,EAAKmC,qBAAwB,M,4CAGpE,WACE,MAA+BI,KAAKV,MAA5B7B,EAAR,EAAQA,KAAMC,EAAd,EAAcA,QAASC,EAAvB,EAAuBA,IACvB,OACE,sBAAKU,UAAU,gBAAf,UACE,cAAC,EAAD,CAASY,MAAM,wBAAf,SACE,cAAC,EAAD,CACEjB,QAASgC,KAAKV,MACdrB,gBAAiB+B,KAAKT,gBAI1B,cAAC,EAAD,CAASN,MAAM,aAAf,SACGe,KAAKJ,qBACJ,cAAC,EAAD,CACEnC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOoC,KAAKJ,qBACZ/B,mBAAoBmC,KAAKH,oCAG3B,cAAC,EAAD,CAAcT,QAAQ,+B,GA7ChBa,cAqDHZ,ICzDfa,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCR1BC,EAAOC,QAAU,CAAC,IAAM,6BAA6B,aAAe,yC","file":"static/js/main.fd85f4b8.chunk.js","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\nfunction Statistics({ good, neutral, bad, total, positivePercentage }) {\r\n  return (\r\n    <>\r\n      <ul>\r\n        <li>\r\n          <p>Good: {good}</p>\r\n        </li>\r\n        <li>\r\n          <p>Neutral: {neutral}</p>\r\n        </li>\r\n        <li>\r\n          <p>Bad: {bad}</p>\r\n        </li>\r\n        <li>\r\n          <p>Total: {total}</p>\r\n        </li>\r\n        <li>\r\n          <p>\r\n            Positive feedback:{' '}\r\n            {isNaN(positivePercentage) ? 0 : positivePercentage}%\r\n          </p>\r\n        </li>\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positivePercentage: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import PropTypes from 'prop-types';\r\n\r\nimport style from './FeedbackOptions.module.scss';\r\n\r\nfunction FeedbackOptions({ options, onLeaveFeedback }) {\r\n  const btnNamesArr = Object.keys(options);\r\n  return (\r\n    <>\r\n      <ul className={style.list__button}>\r\n        {btnNamesArr.map(btmName => (\r\n          <li key={btmName}>\r\n            <button\r\n              id={btmName}\r\n              onClick={onLeaveFeedback}\r\n              className={style.btn}\r\n            >\r\n              {btmName.charAt(0).toUpperCase() + btmName.slice(1)}\r\n            </button>\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    </>\r\n  );\r\n}\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.objectOf(PropTypes.number).isRequired,\r\n  onLeaveFeedback: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import PropTypes from 'prop-types';\r\n\r\nfunction Section({ title, children }) {\r\n  return (\r\n    <section>\r\n      <h2>{title}</h2>\r\n      {children}\r\n    </section>\r\n  );\r\n}\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Section;\r\n","import PropTypes from 'prop-types';\r\n\r\nfunction Notification({ message }) {\r\n  return <p>{message}</p>;\r\n}\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Notification;\r\n","import { Component } from 'react';\n\nimport Statistics from './components/Statistics';\nimport FeedbackOptions from './components/FeedbackOptions';\nimport Section from './components/Section';\nimport Notification from './components/Notification';\n\nimport './App.css';\n\nclass App extends Component {\n  state = {\n    good: 0,\n    neutral: 0,\n    bad: 0,\n  };\n\n  handleClick = event => {\n    this.setState(prevState => {\n      return {\n        ...prevState,\n        [event.target.id]: prevState[event.target.id] + 1,\n      };\n    });\n  };\n\n  countTotalFeedback = () => {\n    return this.state.good + this.state.neutral + this.state.bad;\n  };\n\n  countPositiveFeedbackPercentage = () => {\n    return Math.round((this.state.good / this.countTotalFeedback()) * 100);\n  };\n\n  render() {\n    const { good, neutral, bad } = this.state;\n    return (\n      <div className=\"App container\">\n        <Section title=\"Please leave Feedback\">\n          <FeedbackOptions\n            options={this.state}\n            onLeaveFeedback={this.handleClick}\n          ></FeedbackOptions>\n        </Section>\n\n        <Section title=\"Statistics\">\n          {this.countTotalFeedback() ? (\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={this.countTotalFeedback()}\n              positivePercentage={this.countPositiveFeedbackPercentage()}\n            ></Statistics>\n          ) : (\n            <Notification message=\"No feedback given\" />\n          )}\n        </Section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"FeedbackOptions_btn__1Xu7r\",\"list__button\":\"FeedbackOptions_list__button__2x5wb\"};"],"sourceRoot":""}